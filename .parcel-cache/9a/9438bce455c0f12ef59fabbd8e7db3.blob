var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "styles", function () {
  return styles;
});
var _babelRuntimeHelpersEsmExtends = require("@babel/runtime/helpers/esm/extends");
var _babelRuntimeHelpersEsmExtendsDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmExtends);
var _babelRuntimeHelpersEsmObjectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmObjectWithoutProperties);
var _react = require('react');
var _propTypes = require('prop-types');
var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
var _clsx = require('clsx');
var _clsxDefault = _parcelHelpers.interopDefault(_clsx);
var _stylesWithStyles = require('../styles/withStyles');
var _stylesWithStylesDefault = _parcelHelpers.interopDefault(_stylesWithStyles);
var styles = {
  /*Styles applied to the root element.*/
  root: {
    display: 'flex',
    flexDirection: 'column',
    flexWrap: 'wrap'
  },
  /*Styles applied to the root element if `row={true}`.*/
  row: {
    flexDirection: 'row'
  }
};
/**
* `FormGroup` wraps controls such as `Checkbox` and `Switch`.
* It provides compact row layout.
* For the `Radio`, you should be using the `RadioGroup` component instead of this one.
*/
var FormGroup = /*#__PURE__*/_react.forwardRef(function FormGroup(props, ref) {
  var classes = props.classes, className = props.className, _props$row = props.row, row = _props$row === void 0 ? false : _props$row, other = _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault.default(props, ["classes", "className", "row"]);
  return (
    /*#__PURE__*/_react.createElement("div", _babelRuntimeHelpersEsmExtendsDefault.default({
      className: _clsxDefault.default(classes.root, className, row && classes.row),
      ref: ref
    }, other))
  );
});
"development" !== "production" ? FormGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
  * The content of the component.
  */
  children: _propTypesDefault.default.node,
  /**
  * Override or extend the styles applied to the component.
  * See [CSS API](#css) below for more details.
  */
  classes: _propTypesDefault.default.object,
  /**
  * @ignore
  */
  className: _propTypesDefault.default.string,
  /**
  * Display group of elements in a compact row.
  */
  row: _propTypesDefault.default.bool
} : void 0;
exports.default = _stylesWithStylesDefault.default(styles, {
  name: 'MuiFormGroup'
})(FormGroup);
