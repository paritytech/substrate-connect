var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _BrowserDatabase = require('./BrowserDatabase');
// let create: (name: string) => Database;
// // We dont want to force our users into webpack5 / babel
// // This IIFE simulates top level await in the browser
// // https://github.com/tc39/proposal-top-level-await
// (async () => {
// let db: any;
// if (typeof window === 'object') {
// db  = await import('./BrowserDatabase');
// } else {
// db  = await import('./FsDatabase');
// }
// create = db.create;
// })();
const pkg = {
  name: '@substrate/connect'
};
// REM: what if the database format changes?  Should we include a version?
const named = chain => {
  return `${pkg.name}.${chain}`;
};
function database(chain) {
  chain = chain || pkg.name;
  // TODO: use db. instead of create as a workadround for now
  return _BrowserDatabase.create(named(chain));
}
exports.default = database;
