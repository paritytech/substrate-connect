var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "BrowserDatabase", function () {
  return BrowserDatabase;
});
_parcelHelpers.export(exports, "create", function () {
  return create;
});
var __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || (function (receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
});
var __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || (function (receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
});
var _name;
class BrowserDatabase {
  constructor(name) {
    _name.set(this, void 0);
    __classPrivateFieldSet(this, _name, `smoldot::chainstate::${name}`);
  }
  load() {
    return window.localStorage.getItem(__classPrivateFieldGet(this, _name)) || '';
  }
  save(state) {
    window.localStorage.setItem(__classPrivateFieldGet(this, _name), state);
  }
  delete() {
    window.localStorage.removeItem(__classPrivateFieldGet(this, _name));
  }
}
_name = new WeakMap();
function create(name) {
  return new BrowserDatabase(name);
}
