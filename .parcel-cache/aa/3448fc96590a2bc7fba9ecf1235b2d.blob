var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "styles", function () {
  return styles;
});
var _babelRuntimeHelpersEsmExtends = require("@babel/runtime/helpers/esm/extends");
var _babelRuntimeHelpersEsmExtendsDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmExtends);
var _react = require('react');
var _propTypes = require('prop-types');
var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
var _stylesWithStyles = require('../styles/withStyles');
var _stylesWithStylesDefault = _parcelHelpers.interopDefault(_stylesWithStyles);
var _Typography = require('../Typography');
var _TypographyDefault = _parcelHelpers.interopDefault(_Typography);
var styles = {
  /*Styles applied to the root element.*/
  root: {
    marginBottom: 12
  }
};
var DialogContentText = /*#__PURE__*/_react.forwardRef(function DialogContentText(props, ref) {
  return (
    /*#__PURE__*/_react.createElement(_TypographyDefault.default, _babelRuntimeHelpersEsmExtendsDefault.default({
      component: "p",
      variant: "body1",
      color: "textSecondary",
      ref: ref
    }, props))
  );
});
"development" !== "production" ? DialogContentText.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
  * The content of the component.
  */
  children: _propTypesDefault.default.node,
  /**
  * Override or extend the styles applied to the component.
  * See [CSS API](#css) below for more details.
  */
  classes: _propTypesDefault.default.object
} : void 0;
exports.default = _stylesWithStylesDefault.default(styles, {
  name: 'MuiDialogContentText'
})(DialogContentText);
