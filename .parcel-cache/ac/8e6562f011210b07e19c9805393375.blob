var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _react = require('react');
function useControlled(_ref) {
  var controlled = _ref.controlled, defaultProp = _ref.default, name = _ref.name, _ref$state = _ref.state, state = _ref$state === void 0 ? 'value' : _ref$state;
  var _React$useRef = _react.useRef(controlled !== undefined), isControlled = _React$useRef.current;
  var _React$useState = _react.useState(defaultProp), valueState = _React$useState[0], setValue = _React$useState[1];
  var value = isControlled ? controlled : valueState;
  if ("development" !== 'production') {
    _react.useEffect(function () {
      if (isControlled !== (controlled !== undefined)) {
        console.error([("Material-UI: A component is changing the ").concat(isControlled ? '' : 'un', "controlled ").concat(state, " state of ").concat(name, " to be ").concat(isControlled ? 'un' : '', "controlled."), 'Elements should not switch from uncontrolled to controlled (or vice versa).', ("Decide between using a controlled or uncontrolled ").concat(name, " ") + 'element for the lifetime of the component.', "The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.", 'More info: https://fb.me/react-controlled-components'].join('\n'));
      }
    }, [controlled]);
    var _React$useRef2 = _react.useRef(defaultProp), defaultValue = _React$useRef2.current;
    _react.useEffect(function () {
      if (!isControlled && defaultValue !== defaultProp) {
        console.error([("Material-UI: A component is changing the default ").concat(state, " state of an uncontrolled ").concat(name, " after being initialized. ") + ("To suppress this warning opt to use a controlled ").concat(name, ".")].join('\n'));
      }
    }, [JSON.stringify(defaultProp)]);
  }
  var setValueIfUncontrolled = _react.useCallback(function (newValue) {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}
exports.default = useControlled;
