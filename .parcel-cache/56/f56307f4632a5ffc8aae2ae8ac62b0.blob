var helpers = require("../../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _bnJs = require('bn.js');
  var _bnJsDefault = _parcelHelpers.interopDefault(_bnJs);
  var _react = require('react');
  var _apiUseApi = require('./api/useApi');
  var _apiUseApiDefault = _parcelHelpers.interopDefault(_apiUseApi);
  var _apiUseIsMountedRef = require('./api/useIsMountedRef');
  var _apiUseIsMountedRefDefault = _parcelHelpers.interopDefault(_apiUseIsMountedRef);
  var _s = $RefreshSig$();
  function useUserInfo(address) {
    _s();
    const api = _apiUseApiDefault.default();
    const mountedRef = _apiUseIsMountedRefDefault.default();
    const [usersInfo, setUsersInfo] = _react.useState([]);
    _react.useEffect(() => {
      let unsubscribe = null;
      api.query.system.account(address, data => {
        mountedRef.current && setUsersInfo({
          active: !data.refcount?.isZero?.(),
          address: address,
          created: new Date(),
          balance: new _bnJsDefault.default(data.data.free),
          reserved: new _bnJsDefault.default(data.data.reserved),
          feeFrozen: new _bnJsDefault.default(data.data.feeFrozen),
          miscFrozen: new _bnJsDefault.default(data.data.feeFrozen)
        });
      }).then(u => {
        unsubscribe = u;
      }).catch(console.error);
      return () => {
        unsubscribe && unsubscribe();
      };
    }, [address, api, mountedRef]);
    return usersInfo;
  }
  exports.default = useUserInfo;
  _s(useUserInfo, "4UiXFvQVkQkxuakfMeXJmvZ0yjc=", false, function () {
    return [_apiUseApiDefault.default, _apiUseIsMountedRefDefault.default];
  });
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
