var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _babelRuntimeHelpersEsmExtends = require("@babel/runtime/helpers/esm/extends");
var _babelRuntimeHelpersEsmExtendsDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmExtends);
var _babelRuntimeHelpersEsmObjectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmObjectWithoutProperties);
var _react = require('react');
var _propTypes = require('prop-types');
var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
var _internalSvgIconsKeyboardArrowLeft = require('../internal/svg-icons/KeyboardArrowLeft');
var _internalSvgIconsKeyboardArrowLeftDefault = _parcelHelpers.interopDefault(_internalSvgIconsKeyboardArrowLeft);
var _internalSvgIconsKeyboardArrowRight = require('../internal/svg-icons/KeyboardArrowRight');
var _internalSvgIconsKeyboardArrowRightDefault = _parcelHelpers.interopDefault(_internalSvgIconsKeyboardArrowRight);
var _stylesUseTheme = require('../styles/useTheme');
var _stylesUseThemeDefault = _parcelHelpers.interopDefault(_stylesUseTheme);
var _IconButton = require('../IconButton');
var _IconButtonDefault = _parcelHelpers.interopDefault(_IconButton);
/**
* @ignore - internal component.
*/
var _ref = /*#__PURE__*/_react.createElement(_internalSvgIconsKeyboardArrowRightDefault.default, null);
var _ref2 = /*#__PURE__*/_react.createElement(_internalSvgIconsKeyboardArrowLeftDefault.default, null);
var _ref3 = /*#__PURE__*/_react.createElement(_internalSvgIconsKeyboardArrowLeftDefault.default, null);
var _ref4 = /*#__PURE__*/_react.createElement(_internalSvgIconsKeyboardArrowRightDefault.default, null);
var TablePaginationActions = /*#__PURE__*/_react.forwardRef(function TablePaginationActions(props, ref) {
  var backIconButtonProps = props.backIconButtonProps, count = props.count, nextIconButtonProps = props.nextIconButtonProps, onChangePage = props.onChangePage, page = props.page, rowsPerPage = props.rowsPerPage, other = _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault.default(props, ["backIconButtonProps", "count", "nextIconButtonProps", "onChangePage", "page", "rowsPerPage"]);
  var theme = _stylesUseThemeDefault.default();
  var handleBackButtonClick = function handleBackButtonClick(event) {
    onChangePage(event, page - 1);
  };
  var handleNextButtonClick = function handleNextButtonClick(event) {
    onChangePage(event, page + 1);
  };
  return (
    /*#__PURE__*/_react.createElement("div", _babelRuntimeHelpersEsmExtendsDefault.default({
      ref: ref
    }, other), /*#__PURE__*/_react.createElement(_IconButtonDefault.default, _babelRuntimeHelpersEsmExtendsDefault.default({
      onClick: handleBackButtonClick,
      disabled: page === 0,
      color: "inherit"
    }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/_react.createElement(_IconButtonDefault.default, _babelRuntimeHelpersEsmExtendsDefault.default({
      onClick: handleNextButtonClick,
      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,
      color: "inherit"
    }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4))
  );
});
"development" !== "production" ? TablePaginationActions.propTypes = {
  /**
  * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.
  */
  backIconButtonProps: _propTypesDefault.default.object,
  /**
  * The total number of rows.
  */
  count: _propTypesDefault.default.number.isRequired,
  /**
  * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.
  */
  nextIconButtonProps: _propTypesDefault.default.object,
  /**
  * Callback fired when the page is changed.
  *
  * @param {object} event The event source of the callback.
  * @param {number} page The page selected.
  */
  onChangePage: _propTypesDefault.default.func.isRequired,
  /**
  * The zero-based index of the current page.
  */
  page: _propTypesDefault.default.number.isRequired,
  /**
  * The number of rows per page.
  */
  rowsPerPage: _propTypesDefault.default.number.isRequired
} : void 0;
exports.default = TablePaginationActions;
