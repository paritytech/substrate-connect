var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "endpoints", function () {
  return endpoints;
});
_parcelHelpers.export(exports, "POLKA_ACCOUNT_ENDPOINTS", function () {
  return POLKA_ACCOUNT_ENDPOINTS;
});
_parcelHelpers.export(exports, "users", function () {
  return users;
});
_parcelHelpers.export(exports, "JS_WASM_PROVIDERS", function () {
  return JS_WASM_PROVIDERS;
});
_parcelHelpers.export(exports, "REMOTE_PROVIDERS", function () {
  return REMOTE_PROVIDERS;
});
_parcelHelpers.export(exports, "ALL_PROVIDERS", function () {
  return ALL_PROVIDERS;
});
var _polkadotApi = require('@polkadot/api');
const endpoints = {
  'kusama': 'wss://kusama-rpc.polkadot.io/',
  'polkadot': 'wss://rpc.polkadot.io',
  'westend': 'wss://westend-rpc.polkadot.io',
  'localPolkadotNetwork': 'ws://127.0.0.1:9945',
  'local': 'ws://127.0.0.1:9944'
};
const POLKA_ACCOUNT_ENDPOINTS = {
  'polkascan': 'polkascan.io',
  'polkastats': 'polkastats.io'
};
const users = {
  'kusama': 'CzugcapJWD8CEHBYHDeFpVcxfzFBCg57ic72y4ryJfXUnk7',
  'polkadot': '11uMPbeaEDJhUxzU4ZfWW9VQEsryP9XqFcNRfPdYda6aFWJ',
  'westend': '12gG5fz9A7k7CgZeis8JesCoZiARDioonHYp5W9Vkwc6nFyB'
};
const JS_WASM_PROVIDERS = {};
const REMOTE_PROVIDERS = {
  'Local-Polkadot-WsProvider': {
    description: `Local node running on ${endpoints.local}`,
    id: 'Local-Polkadot-WsProvider',
    network: 'Local Polkadot Network',
    node: 'light',
    source: 'remote',
    endpoint: endpoints.local,
    client: 'Websocket remote',
    start: () => Promise.resolve(new _polkadotApi.WsProvider(endpoints.local)),
    transport: 'WsProvider'
  },
  'Polkadot-WsProvider': {
    description: 'Remote node hosted by W3F',
    id: 'Polkadot-WsProvider',
    network: 'Polkadot',
    node: 'light',
    source: 'remote',
    endpoint: endpoints.polkadot,
    client: 'Websocket remote',
    start: () => Promise.resolve(new _polkadotApi.WsProvider(endpoints.polkadot)),
    transport: 'WsProvider'
  },
  'Kusama-WsProvider': {
    description: 'Remote node hosted by W3F',
    id: 'Kusama-WsProvider',
    network: 'Kusama',
    node: 'light',
    source: 'remote',
    endpoint: endpoints.kusama,
    client: 'Websocket remote',
    start: () => Promise.resolve(new _polkadotApi.WsProvider(endpoints.kusama)),
    transport: 'WsProvider'
  },
  'Westend-WsProvider': {
    description: 'Remote node hosted by W3F',
    id: 'Westend-WsProvider',
    network: 'Westend',
    node: 'light',
    source: 'remote',
    endpoint: endpoints.westend,
    client: 'Websocket remote',
    start: () => Promise.resolve(new _polkadotApi.WsProvider(endpoints.westend)),
    transport: 'WsProvider'
  }
};
const ALL_PROVIDERS = {
  ...REMOTE_PROVIDERS,
  ...JS_WASM_PROVIDERS
};
