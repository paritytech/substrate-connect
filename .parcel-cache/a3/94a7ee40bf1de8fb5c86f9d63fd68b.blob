var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "styles", function () {
  return styles;
});
var _babelRuntimeHelpersEsmExtends = require("@babel/runtime/helpers/esm/extends");
var _babelRuntimeHelpersEsmExtendsDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmExtends);
var _babelRuntimeHelpersEsmObjectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmObjectWithoutProperties);
var _react = require('react');
var _clsx = require('clsx');
var _clsxDefault = _parcelHelpers.interopDefault(_clsx);
var _propTypes = require('prop-types');
var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
var _materialUiCoreStyles = require('@material-ui/core/styles');
var styles = function styles(theme) {
  return {
    /*Styles applied to the root element.*/
    root: {
      display: 'block',
      // Create a "on paper" color with sufficient contrast retaining the color
      backgroundColor: _materialUiCoreStyles.fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),
      height: '1.2em'
    },
    /*Styles applied to the root element if `variant="text"`.*/
    text: {
      marginTop: 0,
      marginBottom: 0,
      height: 'auto',
      transformOrigin: '0 60%',
      transform: 'scale(1, 0.60)',
      borderRadius: theme.shape.borderRadius,
      '&:empty:before': {
        content: '"\\00a0"'
      }
    },
    /*Styles applied to the root element if `variant="rect"`.*/
    rect: {},
    /*Styles applied to the root element if `variant="circle"`.*/
    circle: {
      borderRadius: '50%'
    },
    /*Styles applied to the root element if `animation="pulse"`.*/
    pulse: {
      animation: '$pulse 1.5s ease-in-out 0.5s infinite'
    },
    '@keyframes pulse': {
      '0%': {
        opacity: 1
      },
      '50%': {
        opacity: 0.4
      },
      '100%': {
        opacity: 1
      }
    },
    /*Styles applied to the root element if `animation="wave"`.*/
    wave: {
      position: 'relative',
      overflow: 'hidden',
      '&::after': {
        animation: '$wave 1.6s linear 0.5s infinite',
        background: ("linear-gradient(90deg, transparent, ").concat(theme.palette.action.hover, ", transparent)"),
        content: '""',
        position: 'absolute',
        transform: 'translateX(-100%)',
        // Avoid flash during server-side hydration
        bottom: 0,
        left: 0,
        right: 0,
        top: 0
      }
    },
    '@keyframes wave': {
      '0%': {
        transform: 'translateX(-100%)'
      },
      '60%': {
        // +0.5s of delay between each loop
        transform: 'translateX(100%)'
      },
      '100%': {
        transform: 'translateX(100%)'
      }
    },
    /*Styles applied when the component is passed children.*/
    withChildren: {
      '& > *': {
        visibility: 'hidden'
      }
    },
    /*Styles applied when the component is passed children and no width.*/
    fitContent: {
      maxWidth: 'fit-content'
    },
    /*Styles applied when the component is passed children and no height.*/
    heightAuto: {
      height: 'auto'
    }
  };
};
var Skeleton = /*#__PURE__*/_react.forwardRef(function Skeleton(props, ref) {
  var _props$animation = props.animation, animation = _props$animation === void 0 ? 'pulse' : _props$animation, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'span' : _props$component, height = props.height, _props$variant = props.variant, variant = _props$variant === void 0 ? 'text' : _props$variant, width = props.width, other = _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault.default(props, ["animation", "classes", "className", "component", "height", "variant", "width"]);
  var hasChildren = Boolean(other.children);
  return (
    /*#__PURE__*/_react.createElement(Component, _babelRuntimeHelpersEsmExtendsDefault.default({
      ref: ref,
      className: _clsxDefault.default(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])
    }, other, {
      style: _babelRuntimeHelpersEsmExtendsDefault.default({
        width: width,
        height: height
      }, other.style)
    }))
  );
});
"development" !== "production" ? Skeleton.propTypes = {
  /**
  * The animation.
  * If `false` the animation effect is disabled.
  */
  animation: _propTypesDefault.default.oneOf(['pulse', 'wave', false]),
  /**
  * Optional children to infer width and height from.
  */
  children: _propTypesDefault.default.node,
  /**
  * Override or extend the styles applied to the component.
  * See [CSS API](#css) below for more details.
  */
  classes: _propTypesDefault.default.object.isRequired,
  /**
  * @ignore
  */
  className: _propTypesDefault.default.string,
  /**
  * The component used for the root node.
  * Either a string to use a HTML element or a component.
  */
  component: _propTypesDefault.default./*@typescript-to-proptypes-ignore*/
  elementType,
  /**
  * Height of the skeleton.
  * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
  */
  height: _propTypesDefault.default.oneOfType([_propTypesDefault.default.number, _propTypesDefault.default.string]),
  /**
  * The type of content that will be rendered.
  */
  variant: _propTypesDefault.default.oneOf(['text', 'rect', 'circle']),
  /**
  * Width of the skeleton.
  * Useful when the skeleton is inside an inline element with no width of its own.
  */
  width: _propTypesDefault.default.oneOfType([_propTypesDefault.default.number, _propTypesDefault.default.string])
} : void 0;
exports.default = _materialUiCoreStyles.withStyles(styles, {
  name: 'MuiSkeleton'
})(Skeleton);
