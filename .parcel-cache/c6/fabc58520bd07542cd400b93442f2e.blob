var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "styles", function () {
  return styles;
});
var _babelRuntimeHelpersEsmExtends = require("@babel/runtime/helpers/esm/extends");
var _babelRuntimeHelpersEsmExtendsDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmExtends);
var _babelRuntimeHelpersEsmObjectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmObjectWithoutProperties);
var _react = require('react');
var _propTypes = require('prop-types');
var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
var _clsx = require('clsx');
var _clsxDefault = _parcelHelpers.interopDefault(_clsx);
var _stylesWithStyles = require('../styles/withStyles');
var _stylesWithStylesDefault = _parcelHelpers.interopDefault(_stylesWithStyles);
var _Paper = require('../Paper');
var _PaperDefault = _parcelHelpers.interopDefault(_Paper);
var _StepConnector = require('../StepConnector');
var _StepConnectorDefault = _parcelHelpers.interopDefault(_StepConnector);
var styles = {
  /*Styles applied to the root element.*/
  root: {
    display: 'flex',
    padding: 24
  },
  /*Styles applied to the root element if `orientation="horizontal"`.*/
  horizontal: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  /*Styles applied to the root element if `orientation="vertical"`.*/
  vertical: {
    flexDirection: 'column'
  },
  /*Styles applied to the root element if `alternativeLabel={true}`.*/
  alternativeLabel: {
    alignItems: 'flex-start'
  }
};
var defaultConnector = /*#__PURE__*/_react.createElement(_StepConnectorDefault.default, null);
var Stepper = /*#__PURE__*/_react.forwardRef(function Stepper(props, ref) {
  var _props$activeStep = props.activeStep, activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, children = props.children, classes = props.classes, className = props.className, _props$connector = props.connector, connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector, _props$nonLinear = props.nonLinear, nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, other = _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault.default(props, ["activeStep", "alternativeLabel", "children", "classes", "className", "connector", "nonLinear", "orientation"]);
  var connector = /*#__PURE__*/_react.isValidElement(connectorProp) ? /*#__PURE__*/_react.cloneElement(connectorProp, {
    orientation: orientation
  }) : null;
  var childrenArray = _react.Children.toArray(children);
  var steps = childrenArray.map(function (step, index) {
    var state = {
      index: index,
      active: false,
      completed: false,
      disabled: false
    };
    if (activeStep === index) {
      state.active = true;
    } else if (!nonLinear && activeStep > index) {
      state.completed = true;
    } else if (!nonLinear && activeStep < index) {
      state.disabled = true;
    }
    return (
      /*#__PURE__*/_react.cloneElement(step, _babelRuntimeHelpersEsmExtendsDefault.default({
        alternativeLabel: alternativeLabel,
        connector: connector,
        last: index + 1 === childrenArray.length,
        orientation: orientation
      }, state, step.props))
    );
  });
  return (
    /*#__PURE__*/_react.createElement(_PaperDefault.default, _babelRuntimeHelpersEsmExtendsDefault.default({
      square: true,
      elevation: 0,
      className: _clsxDefault.default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),
      ref: ref
    }, other), steps)
  );
});
"development" !== "production" ? Stepper.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
  * Set the active step (zero based index).
  * Set to -1 to disable all the steps.
  */
  activeStep: _propTypesDefault.default.number,
  /**
  * If set to 'true' and orientation is horizontal,
  * then the step label will be positioned under the icon.
  */
  alternativeLabel: _propTypesDefault.default.bool,
  /**
  * Two or more `<Step />` components.
  */
  children: _propTypesDefault.default.node,
  /**
  * Override or extend the styles applied to the component.
  * See [CSS API](#css) below for more details.
  */
  classes: _propTypesDefault.default.object,
  /**
  * @ignore
  */
  className: _propTypesDefault.default.string,
  /**
  * An element to be placed between each step.
  */
  connector: _propTypesDefault.default.element,
  /**
  * If set the `Stepper` will not assist in controlling steps for linear flow.
  */
  nonLinear: _propTypesDefault.default.bool,
  /**
  * The stepper orientation (layout flow direction).
  */
  orientation: _propTypesDefault.default.oneOf(['horizontal', 'vertical'])
} : void 0;
exports.default = _stylesWithStylesDefault.default(styles, {
  name: 'MuiStepper'
})(Stepper);
