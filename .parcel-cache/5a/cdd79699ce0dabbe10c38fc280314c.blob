var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "styles", function () {
  return styles;
});
var _babelRuntimeHelpersEsmExtends = require("@babel/runtime/helpers/esm/extends");
var _babelRuntimeHelpersEsmExtendsDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmExtends);
var _babelRuntimeHelpersEsmObjectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault = _parcelHelpers.interopDefault(_babelRuntimeHelpersEsmObjectWithoutProperties);
var _react = require('react');
var _propTypes = require('prop-types');
var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
var _clsx = require('clsx');
var _clsxDefault = _parcelHelpers.interopDefault(_clsx);
var _Collapse = require('../Collapse');
var _CollapseDefault = _parcelHelpers.interopDefault(_Collapse);
var _stylesWithStyles = require('../styles/withStyles');
var _stylesWithStylesDefault = _parcelHelpers.interopDefault(_stylesWithStyles);
var styles = function styles(theme) {
  return {
    /*Styles applied to the root element.*/
    root: {
      marginTop: 8,
      marginLeft: 12,
      // half icon
      paddingLeft: 8 + 12,
      // margin + half icon
      paddingRight: 8,
      borderLeft: ("1px solid ").concat(theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600])
    },
    /*Styles applied to the root element if `last={true}` (controlled by `Step`).*/
    last: {
      borderLeft: 'none'
    },
    /*Styles applied to the Transition component.*/
    transition: {}
  };
};
var StepContent = /*#__PURE__*/_react.forwardRef(function StepContent(props, ref) {
  var active = props.active, alternativeLabel = props.alternativeLabel, children = props.children, classes = props.classes, className = props.className, completed = props.completed, expanded = props.expanded, last = props.last, optional = props.optional, orientation = props.orientation, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _CollapseDefault.default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura, TransitionProps = props.TransitionProps, other = _babelRuntimeHelpersEsmObjectWithoutPropertiesDefault.default(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "expanded", "last", "optional", "orientation", "TransitionComponent", "transitionDuration", "TransitionProps"]);
  if ("development" !== 'production') {
    if (orientation !== 'vertical') {
      console.error('Material-UI: <StepContent /> is only designed for use with the vertical stepper.');
    }
  }
  var transitionDuration = transitionDurationProp;
  if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
    transitionDuration = undefined;
  }
  return (
    /*#__PURE__*/_react.createElement("div", _babelRuntimeHelpersEsmExtendsDefault.default({
      className: _clsxDefault.default(classes.root, className, last && classes.last),
      ref: ref
    }, other), /*#__PURE__*/_react.createElement(TransitionComponent, _babelRuntimeHelpersEsmExtendsDefault.default({
      in: active || expanded,
      className: classes.transition,
      timeout: transitionDuration,
      unmountOnExit: true
    }, TransitionProps), children))
  );
});
"development" !== "production" ? StepContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
  * Step content.
  */
  children: _propTypesDefault.default.node,
  /**
  * Override or extend the styles applied to the component.
  * See [CSS API](#css) below for more details.
  */
  classes: _propTypesDefault.default.object,
  /**
  * @ignore
  */
  className: _propTypesDefault.default.string,
  /**
  * The component used for the transition.
  * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
  */
  TransitionComponent: _propTypesDefault.default.elementType,
  /**
  * Adjust the duration of the content expand transition.
  * Passed as a prop to the transition component.
  *
  * Set to 'auto' to automatically calculate transition time based on height.
  */
  transitionDuration: _propTypesDefault.default.oneOfType([_propTypesDefault.default.oneOf(['auto']), _propTypesDefault.default.number, _propTypesDefault.default.shape({
    appear: _propTypesDefault.default.number,
    enter: _propTypesDefault.default.number,
    exit: _propTypesDefault.default.number
  })]),
  /**
  * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
  */
  TransitionProps: _propTypesDefault.default.object
} : void 0;
exports.default = _stylesWithStylesDefault.default(styles, {
  name: 'MuiStepContent'
})(StepContent);
