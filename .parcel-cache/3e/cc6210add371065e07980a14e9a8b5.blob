var helpers = require("../../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _materialUiCore = require('@material-ui/core');
  var _themes = require('./../themes');
  var _hooks = require('../hooks');
  var _components = require('../components');
  var _jsxFileName = "/Users/stormsheep/Documents/repos/parity/substrate-connect/projects/burnr/src/components/ThemeToggleProvider.tsx", _s = $RefreshSig$();
  const useStyles = _materialUiCore.makeStyles(theme => ({
    root: {
      position: 'fixed',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      width: '100vw',
      maxWidth: '1330px',
      padding: theme.spacing(2),
      paddingRight: theme.spacing(1),
      [theme.breakpoints.down('sm')]: {
        paddingTop: theme.spacing(1)
      }
    }
  }));
  // @TODO rewrite in a React way?
  const ThemeToggleProvider = ({children}) => {
    _s();
    const classes = useStyles();
    const [localTheme, setLocalTheme] = _hooks.useLocalStorage('theme');
    const [theme, setTheme] = _react.useState(localTheme === 'false' ? false : true);
    const appliedTheme = _materialUiCore.createMuiTheme(theme ? _themes.SubstrateLight : _themes.SubstrateDark);
    const selectTheme = selected => {
      setLocalTheme(selected.toString());
      setTheme(selected);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.ThemeProvider, {
        theme: appliedTheme,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 39,
          columnNumber: 3
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.CssBaseline, {
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 40,
          columnNumber: 4
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: classes.root,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 41,
          columnNumber: 4
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_components.LogoSubstrate, {
        theme: theme,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 42,
          columnNumber: 5
        }
      }), /*#__PURE__*/_reactDefault.default.createElement(_components.ThemeButton, {
        theme: theme,
        onClick: () => selectTheme(!theme),
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 5
        }
      })), children)
    );
  };
  _s(ThemeToggleProvider, "NT0x/XkepTU9PmTf6qGZpU+DGto=", false, function () {
    return [useStyles, _hooks.useLocalStorage];
  });
  _c = ThemeToggleProvider;
  exports.default = ThemeToggleProvider;
  var _c;
  $RefreshReg$(_c, "ThemeToggleProvider");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
