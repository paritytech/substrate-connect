var helpers = require("../../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _materialUiCore = require('@material-ui/core');
  var _bnJs = require('bn.js');
  var _bnJsDefault = _parcelHelpers.interopDefault(_bnJs);
  var _jsxFileName = "/Users/stormsheep/Documents/repos/parity/substrate-connect/projects/burnr/src/components/InputFunds.tsx", _s = $RefreshSig$();
  // @TODO bn.js
  const InputFunds = ({total, setAmount, currency, hidePercentages = false}) => {
    _s();
    // const [value, setValue] = React.useState<string>('');
    const [showValue, setShowValue] = _reactDefault.default.useState('');
    const handleChangeButton = e => {
      const val = new _bnJsDefault.default(e.currentTarget.value).mul(total).toString();
      setAmount(val);
      document.getElementById('SendFundsAmountField')?.focus?.();
    };
    const handleChange = e => {
      const value = e.currentTarget.value.replace(/\D/g, '');
      setShowValue(value !== '' ? value : '');
      setAmount(value !== '' ? value : '0');
    };
    // @TODO focus/blur TextField and %Buttons at the same time in a React way
    const [focus, setFocus] = _reactDefault.default.useState(false);
    const handleFocus = () => {
      setFocus(!focus);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.Box, {
        marginBottom: 1,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 37,
          columnNumber: 4
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.TextField, {
        id: "SendFundsAmountField",
        value: showValue,
        label: "Amount",
        fullWidth: true,
        variant: "outlined",
        onChange: handleChange,
        onFocus: handleFocus,
        onBlur: handleFocus,
        InputProps: {
          endAdornment: /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.InputAdornment, {
            position: "start",
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 48,
              columnNumber: 21
            }
          }, currency)
        },
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 38,
          columnNumber: 5
        }
      })), !hidePercentages && /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.Grid, {
        container: true,
        spacing: 1,
        __self: undefined,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 5
        }
      }, [{
        label: '25%',
        value: 0.25
      }, {
        label: '50%',
        value: 0.5
      }, {
        label: '75%',
        value: 0.75
      }, {
        label: '100%',
        value: 1
      }].map((item, index) => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.Grid, {
            key: index,
            item: true,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 63,
              columnNumber: 9
            }
          }, /*#__PURE__*/_reactDefault.default.createElement(_materialUiCore.Button, {
            onClick: handleChangeButton,
            variant: "outlined",
            color: focus ? 'primary' : 'default',
            size: "small",
            value: item.value,
            __self: undefined,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 64,
              columnNumber: 10
            }
          }, item.label))
        );
      })))
    );
  };
  _s(InputFunds, "H0T+HDOw65//Yd97/4U/4B2MCpM=");
  _c = InputFunds;
  exports.default = InputFunds;
  var _c;
  $RefreshReg$(_c, "InputFunds");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
