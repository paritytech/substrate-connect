name: Substrate Connect CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-extension-versions:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3.5.3
    - id: package-version
      run: echo "version=`jq .version ./projects/extension/package.json`" >> $GITHUB_OUTPUT
    - id: webpack-version
      run: echo "version=`grep -rnw './projects/extension/webpack.config.js' -e 'PKG_VERSION' | grep -o '".*"'`" >> $GITHUB_OUTPUT
    - id: manifest-version-2
      run: echo "version=`jq .version ./projects/extension/public/manifest-v2.json`" >> $GITHUB_OUTPUT
    - id: manifest-version-3
      run: echo "version=`jq .version ./projects/extension/public/manifest-v3.json`" >> $GITHUB_OUTPUT
    - run: exit 1
      if: ${{ steps.package-version.outputs.version != steps.webpack-version.outputs.version }}
    - run: exit 1
      if: ${{ steps.package-version.outputs.version != steps.manifest-version-2.outputs.version }}
    - run: exit 1
      if: ${{ steps.package-version.outputs.version != steps.manifest-version-3.outputs.version }}
    - run: exit 1
      if: ${{steps.package-version.outputs.version == '' || steps.webpack-version.outputs.version == ''  || steps.manifest-version-2.outputs.version == '' || steps.manifest-version-3.outputs.version == ''}}

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # TODO: re-enable Node 20.x after https://github.com/nodejs/node/pull/49500
        node-version: [16.x, 18.x, "20.5"]

    steps:
    - uses: actions/checkout@v3.5.3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install --immutable
    - run: yarn checkResolutions
    - run: yarn build
    - run: yarn lint
    - run: yarn test

  all:
    # This dummy job depends on all the mandatory checks. It succeeds if and only if all CI checks
    # are successful.
    needs: [check-extension-versions, build]
    runs-on: ubuntu-latest
    steps:
     - run: echo Success
